{{các tham số}}: kí tự {{}} cần phải có
ký hiệu các api chưa hoàn thành : **
các tham số :

không xử lý các API khác chỉ có tạo mã mặc định  trong ứng dụng gồm có : gen.fieldname,gen.dropdownoptiongen.fromcreategen.fieldvalue
------------------------------------------------------------
+{{gen.fieldname}}-c:tạo row  head  trong  thẻ table
                        <tr>
                           <td>id</id>
                        </tr>
                
+{{gen.fieldvalue}}-c:tạo ngfor và các field,row value trong thẻ tbody , tên bảng -> lowercase  =>
                     <tr *ngFor="let product of listProduct">
                        <td>{{product.Name}}</td>
                    </tr>          
+{{gen.dropdownoption}}-l-v:l->label,v->value;
        <option *ngFor="let dropdownoption of DropdownOption" [ngValue]="dropdownoption.value">
          {{dropdownoption.label}}
        </option>
+{{gen.fromcreate}} -p
     <form role="form" action="" method="post" enctype="multipart/form-data">
                                    {{ csrf_field() }}
                                <div class="form-group">
                                    <label >Tên sản phẩm</label>
                                    <input type="text" required name="productname" class="form-control"   value="">
                                </div>
    </form>
+{{gen.fromedit}}    
 <form role="form" action="{{URL::to('/update-product/'.$pro->product_id)}}" method="post" enctype="multipart/form-data">
                                    {{ csrf_field() }}
                                <div class="form-group">
                                    <label for="exampleInputEmail1">Tên sản phẩm</label>
                                    <input type="text" required name="product_name" class="form-control"  onkeyup="ChangeToSlug(); "id="slug" value="{{$pro->product_name}}">
                                </div>
 </form>      
                        
+{{begin.xxx}}:bắt đầu copy . xxx được đặt tên tùy người dùng bắt buộc trong begin chỉ có 1 dấu ( . ) ,nếu k tìm thấy end sẽ copy tất cả tới hết file .và trong 1 begin-end ko được phép chứa cái khác.

+{{end.xxx}}: kết thúc copy
+{{data.member}}: xác định  vị trí để đật field và yêu cầu trong begin-end.
+{{data.length}}: xác định  vị trí để đặt độ dài và yêu cầu trong begin-end.
+{{data.type}}: xác định  vị trí để đặt  kiểu dữ liệu và yêu cầu trong begin-end.

+{{paste.xxx}}: số lần paste dựa vào key select -p trong ứng dụng vd insert select 5 field thì paste 5 lần với và mỗi lần 1 field theo thứ tự column trong table và đặt paste ở đâu thì sẽ đoạn mã sẽ đc tạo ở đó
ví dụ: begin-end và select column nameproduct:
{{begin.insertProduct}}
    <div class="form-group">
        <label>{{datamember}}</label>
        <input class="form-control form-control-lg" placeholder="Full Name" name="{{datamember}}"
            #{{datamember}}="ngModel" [(ngModel)]="service.formData.{{datamember}}"
            required [class.invalid]="{{datamember}}.invalid && {{datamember}}.touched">
    </div>
{{end.insertProduct}}
{{paste.insertProduct}}
=>
    <div class="form-group">
        <label>nameProduct</label>
        <input class="form-control form-control-lg" placeholder="Full Name" name="nameProduct"
            #nameProduct="ngModel" [(ngModel)]="service.formData.nameProduct"
            required [class.invalid]="nameProduct.invalid && nameProduct.touched">
    </div>





+{{parameters.init}}-p: các tham số khởi tạo function vd: void abc ( {{parameters.init}}) =>  (id: number)
+{{parameters.pass}}-p: các tham số truyền vào function vd: void abc ( {{parameters.pass}}) =>(id,name)
+{{parameters.modelpass}}-p : các thuộc tính của tham số cho function vd: (product.id,...)
+{{parameters.service}}:vd => productService
+{{parameters.repository}}:vd => productRepository
+{{fields}}-c: id: string ;....
+{{nametable}}: tên table,class đang chọn vd: {{nametable}} => abc
+{{namespace}}: tên namespace vd namespace {{namespace}}.DAL => namespace abc.DAL
+{{iclass}}: dat ten table la interface+table vd: {{iclass}}=> IProduct
+{{iclass.service}}: vd:{{iclass.service}}=> IProductService
+{{iclass.repository}}: vd:{{iclass.service}}=> IProductRepository
+{{variable.service}} vd: {{variable.service}} => _productService 
+{{variable.repository}} vd:=> _employeeRepository
+{{class.model}}: ten class + model =>ProductModel
+{{class.service}}: ProductService
+{{class.repository}}: ProductRepository
/
+{{comment.param}}: <param name="json_list_id">........</param>
+{{parameters.fromuri}}-p:truyền tham so trong function url id:number,name:string
+{{parameters.frombody}}-p:tham số phần body API this.NameTable =>this.Product
+{{update}}-u:product.id = model.id;.........
+{{parameters.route}}-p: =>..../${id}/${name}....
+{{parameters.Convert}}-c: trong api convert các kiểu list->json,string date->datetime,dictionary<string,object>-> formData.Keys.Contains("uom_rcd") ? Convert.ToString(formData["uom_rcd"]) : "";


--ghi chú: có thể gép các file với nhau vd:
trong file getall:
<from> 
{{search}}
</form>
 <table class="table">
            <thead class="thead-light">
               
                   {{gen.fieldname}}
               
            </thead>
            <tbody>
              
                    {{gen.fieldvalue}}  
                    <td (click)="populateForm(pd)">{{pd.cardOwnerName}}</td>
                    <td (click)="populateForm(pd)">{{pd.cardNumber}}</td>
                    <td (click)="populateForm(pd)">{{pd.expirationDate}}</td>
                    <td>
                    {{delete}}
                    </td>
            </tbody>
</table>
