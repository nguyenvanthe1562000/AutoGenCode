{{các tham số}}: kí tự {{}} cần phải có
{{insert}}
{{update}}
{{delete}}
{{getAll}}
{{search}}
{{dropdown}}
{{saveFromList}}
{{getById}}

các tham số :
+{{parameters.init}}-j: các tham số khởi tạo function vd: void abc ( {{parameters.init}}) =>  (string abc)
+{{parameters.init}}-p: các tham số khởi tạo function vd: void abc ( {{parameters.init}}) =>  (string abc)
+{{parameters.pass}}-p: các tham số truyền vào function vd: void abc ( {{parameters.pass}}) =>(id,name)
+{{parameters.store}}-p:các tham số truyền store function vd: ("SP_DEL_PRODUCT",{{parameters.store}}) =>("SP_DEL_PRODUCT", "@ID", id,"@name",name);
+{{parameters.modelstore}}-p : các thuộc tính của tham số cho stor vd:("SP_DEL_PRODUCT",{{parameters.store}})=>("SP_DEL_PRODUCT", "@ID", model.id,"@name",model.name);
+{{parameters.modelpass}}-p : các thuộc tính của tham số cho function vd:abc.add(mode.id,model.name)
+{{parameters.service}}:vd => productService
+{{parameters.repository}}:vd => productRepository
+{{fields}}-p,-r (nếu có): các thuộc tính vd:{{fields}} => public string abc {get;set;}; có (-r) [required] [maxlength(xx)](nếu là string) public string abc{get;set;} 
+{{nametable}}: tên table,class đang chọn vd: {{nametable}} => abc
+{{namespace}}: tên namespace vd namespace {{namespace}}.DAL => namespace abc.DAL
+{{iclass}}: dat ten table la interface+table vd: {{iclass}}=> IProduct
+{{iclass.service}}: vd:{{iclass.service}}=> IProductService
+{{iclass.repository}}: vd:{{iclass.service}}=> IProductRepository
+{{variable.service}} vd: {{variable.service}} => _productService 
+{{variable.repository}} vd:=> _employeeRepository
+{{class.model}}: ten class + model =>ProductModel
+{{class.service}}: ProductService
+{{class.repository}}: ProductRepository
+{{entity}}:  public virtual DbSet<classname> classname+s {get;set;}
/
{{parameters.createmodel}}:khởi tạo 1 object và lấy giữ liêụ từ object param
vd: Product product=new product(){
	id=model.id, name=model.name};
+{{comment.param}}: <param name="json_list_id">........</param>
+{{parameters.fromuri}}-p:các tham số khởi tạo function api với tham số [fromUri] string id,....
+{{parameters.frombody}}-p:các tham số khởi tạo function api với tham số [fromBody] + class model +model =>[fromBody] productmodel model
+{{parameters.frombody}}-j:các tham số khởi tạo function api với tham số [fromBody]+ list<classmodel> list_model =>[fromBody] list<productmodel> model
+{{update}}-u:product.id = model.id;.........
+{{parameters.route}}-p:{id}/{name}.....

+{{parameters.Convert}} -j-k : trong api convert các kiểu list->json,string date->datetime,dictionary<string,object>-> 
formData.Keys.Contains("uom_rcd") ? Convert.ToString(formData["uom_rcd"]) : "";


+{{store.parameter_1}}-p vd:@id int,@name varchar(10)
+{{store.parameter_2}}-p vd:@id,@name
+{{store.tablefield}}-c vd:id,name
+{{store.required_1}}-r :tên bảng + field = tham số vd: nhanvien.id=@id
+{{store.tablefield=store.updateset}}-p-c : id=@id
+{{store.checking}}-p :((@uom_ref_name = '')OR (u.uom_ref_name_e LIKE '%' + @uom_ref_name + '%'))
+{{store.order}}-a, -d : id asc,name desc
+{{store.lang_v}}-v :   name_v hoặc name_l (vị trí select)
+{{store.lang_e}}-v:   name_e (vị trí select)
+{{store.lang_v_check}}-v: name_v LIKE '%' + @name + '%' (vị trí where)
+{{store.lang_e_check}}-e:name_e LIKE '%' + @name + '%' (vị trí where)
+{{store.jsonfield}}:  => allRows.product_id, allRows.name...
+{{store.tablefield=store.updateset}}p-j-c: pruduct=allRows.product
+{{store.required_1}}-r-j :+ employee.employee_id = allRows.employee_id and ......
+{{store.required_2}}-r : employee.employee_Id  in ( 'your query' ) and 
+{{store.required_3}}-r:employee.employee_Id  = @yourparameter and .....
+{{store.parameter_1}}-j:listjson_ +nametable=>@listjson_product nvarchar(max).
+{{store.fromjson}} -j:  OPENJSON(@listjson_employee) AS e
+{{store.selectjsonfield}}-j: JSON_VALUE(p.value, '$.employee_id') AS employee_id
+{{store.insert_1}}-i-p: INSERT INTO table ( {{store.insert_1}}) =>INSERT INTO table ( id,name)
+{{store.insert_2}}-i :nếu là kiểu datetime và trong tên có từ create hoặc update tự động set value = getdate(),
+{{store.insert_2}}-i-p :@id,@code,@name ,....
+{{store.insert_2}}-i-j : allRows.id,...
+{{store.update}}-i: gender = @gender, create_date=getdate() ........
+{{store.update}}-i-j: gender = allRows.gender, create_date=getdate()....
